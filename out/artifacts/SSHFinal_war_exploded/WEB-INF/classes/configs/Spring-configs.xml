<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xmlns:context="http://www.springframework.org/schema/context"
       xsi:schemaLocation="http://www.springframework.org/schema/aop
	 http://www.springframework.org/schema/aop/spring-aop-3.1.xsd 
	 http://www.springframework.org/schema/beans 
	 http://www.springframework.org/schema/beans/spring-beans-3.1.xsd 
	 http://www.springframework.org/schema/tx 
	 http://www.springframework.org/schema/tx/spring-tx-3.1.xsd
	 http://www.springframework.org/schema/context
	 http://www.springframework.org/schema/context/spring-context-3.1.xsd">

    <!-- 导入spring dao/service配置文件 -->
    <import resource="classpath:configs/config-spring/Spring-*.xml"></import>

    <!-- 连接池配置 -->
    <context:property-placeholder location="classpath:configs/druid.properties"/>
    <bean id="druidDataSource" class="com.alibaba.druid.pool.DruidDataSource" init-method="init" destroy-method="close">
        <property name="driverClassName" value="${driverClassName}"/>
        <property name="url" value="${url}"/>
        <property name="username" value="${theUser}"/>
        <property name="password" value="${password}"/>
        <property name="filters" value="${filters}"/>
        <property name="initialSize" value="${initialSize}"/>
        <property name="maxActive" value="${maxActive}"/>
        <property name="minIdle" value="${minIdle}"/>
        <property name="maxWait" value="${maxWait}"/>
        <property name="validationQuery" value="${validationQuery}"/>
        <property name="testWhileIdle" value="${testWhileIdle}"/>
        <property name="testOnBorrow" value="${testOnBorrow}"/>
        <property name="testOnReturn" value="${testOnReturn}"/>
        <property name="maxPoolPreparedStatementPerConnectionSize" value="${maxPoolPreparedStatementPerConnectionSize}"/>
        <property name="removeAbandoned" value="${removeAbandoned}"/>
        <property name="removeAbandonedTimeout" value="${removeAbandonedTimeout}"/>
        <property name="timeBetweenEvictionRunsMillis" value="${timeBetweenEvictionRunsMillis}"/>
        <property name="minEvictableIdleTimeMillis" value="${minEvictableIdleTimeMillis}"/>
    </bean>
    <!--  Hibernate config start -->
    <bean id="sessionFactory" class="org.springframework.orm.hibernate3.LocalSessionFactoryBean">
        <property name="dataSource" ref="druidDataSource"></property>
        <property name="configLocation">
            <value>classpath:configs/hibernate.cfg.xml</value>
        </property>
        <property name="mappingLocations">
            <list>
                <value>classpath:com/cheery/model/*.hbm.xml</value>
            </list>
        </property>
    </bean>
    <!--  Hibernate config end -->

    <!-- 事务配置 start -->
    <bean id="transactionManager" class="org.springframework.orm.hibernate3.HibernateTransactionManager">
        <property name="sessionFactory" ref="sessionFactory"/>
    </bean>

    <tx:advice id="txAdvice" transaction-manager="transactionManager">
        <tx:attributes>
            <tx:method name="save*" propagation="REQUIRED"/>
            <tx:method name="del*" propagation="REQUIRED"/>
            <tx:method name="update*" propagation="REQUIRED"/>
            <tx:method name="add*" propagation="REQUIRED"/>
            <tx:method name="find*" propagation="REQUIRED"/>
            <tx:method name="get*" propagation="REQUIRED"/>
            <tx:method name="*" read-only="true"/>
        </tx:attributes>
    </tx:advice>
    <aop:config>
        <aop:pointcut expression="execution(* com.cheery.service.*.* (..))" id="txPointCut"/>
        <aop:advisor advice-ref="txAdvice" pointcut-ref="txPointCut"/>
    </aop:config>
    <!-- 事务配置 end -->

    <!-- action配置 -->
    <bean id="masterAction" class="com.cheery.actions.MasterAction" scope="prototype">
        <property name="masterServ" ref="masterServ"></property>
    </bean>

    <bean id="mobileAction" class="com.cheery.actions.MobileAction" scope="prototype">
        <property name="mobileServ" ref="mobileServ"></property>
    </bean>
</beans>